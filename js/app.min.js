"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  // checker
  var useItemChecker = function useItemChecker(els, onClickOutside) {
    var checkBodyClick = function checkBodyClick(e) {
      var currentEl = e.target;
      while (currentEl) {
        if (els.includes(currentEl)) break;
        currentEl = currentEl.parentNode;
      }
      if (!currentEl) {
        onClickOutside();
        removeBodyChecker();
      }
    };
    function setBodyChecker() {
      document.documentElement.addEventListener('click', checkBodyClick);
    }
    function removeBodyChecker() {
      document.documentElement.removeEventListener('click', checkBodyClick);
    }
    return {
      setBodyChecker: setBodyChecker,
      removeBodyChecker: removeBodyChecker
    };
  };

  // slides up/down/toggle
  var slideUpQna = function slideUpQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.transitionProperty = 'height, margin, padding';
    target.style.transitionDuration = duration + 'ms';
    target.style.height = target.offsetHeight + 'px';
    target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.display = 'none';
      target.style.removeProperty('height');
      target.style.removeProperty('padding-top');
      target.style.removeProperty('padding-bottom');
      target.style.removeProperty('margin-top');
      target.style.removeProperty('margin-bottom');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.remove('is--open');
  };
  var slideDownQna = function slideDownQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.removeProperty('display');
    var display = window.getComputedStyle(target).display;
    if (display === 'none') display = 'block';
    target.style.display = display;
    var height = target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.offsetHeight;
    target.style.transitionProperty = "height, margin, padding";
    target.style.transitionDuration = duration + 'ms';
    target.style.height = height + 'px';
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.removeProperty('height');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.add('is--open');
  };
  var slideToggleQna = function slideToggleQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    if (window.getComputedStyle(target).display === 'none') {
      return slideDownQna(target, duration);
    } else {
      return slideUpQna(target, duration);
    }
  };

  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // textarea
  var allTexareas = document.querySelectorAll('textarea');
  if (allTexareas) {
    allTexareas.forEach(function (el) {
      el.style.height = el.setAttribute('style', 'height: ' + el.scrollHeight + 'px');
      el.classList.add('auto');
      el.addEventListener('input', function (e) {
        el.style.height = 'auto';
        el.style.height = el.scrollHeight + 'px';
      });
    });
  }

  // mobile menu
  var mobileMenu = document.getElementById('menu');
  var mobileMenuTrigger = document.getElementById('hamburger-toggle');
  if (mobileMenu && mobileMenuTrigger) {
    mobileMenuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        mobileMenuTrigger.classList.remove('is--active');
        mobileMenu.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        mobileMenuTrigger.classList.add('is--active');
        mobileMenu.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
  }

  // select
  var selected = document.querySelectorAll('.select-box__selected');
  var optionsList = document.querySelectorAll('.select-box__option');
  if (selected) {
    selected.forEach(function (item) {
      var close = function close() {
        document.querySelectorAll('.select-box__container').forEach(function (child) {
          child.classList.remove('select-box__container--active');
          child.removeAttribute('style');
        });
        document.querySelectorAll('.select-box__selected').forEach(function (child) {
          return child.classList.remove('select-box__selected--active');
        });
      };
      var itemChecker = useItemChecker([item.parentNode].concat(_toConsumableArray(selected)), close);
      item.addEventListener('click', function () {
        var container = item.previousElementSibling;
        if (container.classList.contains('select-box__container--active')) {
          close();
        } else {
          close();
          container.classList.add('select-box__container--active');
          item.classList.add('select-box__selected--active');
          itemChecker.setBodyChecker();
        }
      });
    });
  }
  if (optionsList) {
    optionsList.forEach(function (option) {
      option.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = option.closest('.select-box');
        var currentContainer = parent.querySelector('.select-box__container');
        var currentSelected = parent.querySelector('.select-box__selected');
        var currentSelectedPlaceholder = currentSelected.querySelector('.select-box__placeholder');
        var currentSelectedValue = currentSelected.querySelector('.select-box__values');
        if (option.querySelector('input').checked) {
          return false;
        } else {
          option.querySelector('input').checked = true;
        }
        if (currentSelectedPlaceholder.classList.contains('select-box__placeholder--active')) {
          currentSelectedPlaceholder.classList.remove('select-box__placeholder--active');
          currentSelectedValue.classList.add('select-box__values--active');
        }
        currentSelectedValue.innerHTML = option.querySelector('.select-box__title').innerHTML;
        currentContainer.classList.remove('select-box__container--active');
        currentSelected.classList.remove('select-box__selected--active');
      });
    });
  }

  // reservation
  var reservationInfoTrigger = document.querySelectorAll('.reservation-info__trigger');
  var reservationSelectionTrigger = document.querySelectorAll('.reservation-selection__trigger');
  if (reservationInfoTrigger) {
    reservationInfoTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (!item.parentNode.classList.contains('is--open')) {
          slideDownQna(item.nextElementSibling);
        } else {
          slideUpQna(item.nextElementSibling);
        }
      });
    });
  }
  if (reservationSelectionTrigger) {
    reservationSelectionTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (!item.parentNode.classList.contains('is--open')) {
          slideDownQna(item.nextElementSibling);

          // calendar
          var customCalendars = item.parentNode.querySelector('.calendar-js');
          if (customCalendars) {
            setTimeout(function () {
              calendarsInit(customCalendars);
            }, 100);
          }
        } else {
          slideUpQna(item.nextElementSibling);
        }
      });
    });
  }

  // basket
  var basketDataHolderCheckboxes = document.querySelectorAll('.basket-data--holder input[name="status-persons"]');
  var basketDataHolder = document.querySelectorAll('.basket-data--holder .basket-data__holder');
  function toggleBasketDataHolder() {
    basketDataHolder.forEach(function (wrap) {
      return wrap.classList.remove('is--active');
    });
    basketDataHolderCheckboxes.forEach(function (radio, index) {
      if (radio.checked) {
        basketDataHolder[index].classList.add('is--active');
      }
    });
  }
  toggleBasketDataHolder();
  basketDataHolderCheckboxes.forEach(function (radio) {
    radio.addEventListener('change', toggleBasketDataHolder);
  });

  // hotel dropdown
  var hotelTrigger = document.querySelectorAll('.hotel-trigger');
  if (hotelTrigger) {
    hotelTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.hotels__item');
        var dropdown = parent.querySelector('.hotels__item-dropdown');
        if (!parent.classList.contains('is--open')) {
          slideDownQna(dropdown);
          item.classList.add('caret-up');
        } else {
          slideUpQna(dropdown);
          item.classList.remove('caret-up');
        }
      });
    });
  }

  // hotels slider
  var hotelsSlider = document.querySelectorAll('.hotels__slider .swiper');
  if (hotelsSlider) {
    hotelsSlider.forEach(function (slider) {
      var myHotelsSlider = new Swiper(slider, {
        slidesPerView: 1,
        loop: true,
        navigation: {
          prevEl: '.hotels__slider .swiper-button-prev',
          nextEl: '.hotels__slider .swiper-button-next'
        },
        pagination: {
          el: '.swiper-pagination',
          type: 'fraction'
        }
      });
    });
  }

  // hotel room slider
  var hotelRoomSlider = document.querySelectorAll('.hotel-room__slider .swiper');
  if (hotelRoomSlider) {
    hotelRoomSlider.forEach(function (slider) {
      var myHotelRoomSlider = new Swiper(slider, {
        slidesPerView: 'auto',
        spaceBetween: 8,
        loop: true,
        navigation: {
          prevEl: '.hotel-room__slider .swiper-button-prev',
          nextEl: '.hotel-room__slider .swiper-button-next'
        },
        pagination: {
          el: '.swiper-pagination',
          type: 'fraction'
        }
      });
    });
  }

  // quantity counter
  var quantityBtnMinus = document.querySelector('.c-quantity__btn--minus');
  var quantityBtnPlus = document.querySelector('.c-quantity__btn--plus');
  if (quantityBtnMinus && quantityBtnPlus) {
    var valueElement = document.querySelector('.c-quantity__value');
    quantityBtnMinus.addEventListener('click', function () {
      var currentValue = valueElement.value;
      if (currentValue > 1) {
        currentValue--;
        valueElement.value = currentValue;
      }
    });
    quantityBtnPlus.addEventListener('click', function (event) {
      event.preventDefault();
      var currentValue = parseInt(valueElement.value);
      currentValue++;
      valueElement.value = currentValue;
    });
  }
  function calendarsInit(calendar) {
    if (window.innerWidth >= 1024) {
      flatpickr(calendar, {
        inline: true,
        showMonths: 2,
        mode: "range",
        minDate: "today",
        locale: 'ru',
        prevArrow: '<svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none"><path d="M14.8996 16.7998L10.0996 11.9998L14.8996 7.19981" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',
        nextArrow: '<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10.1004 7.20019L14.9004 12.0002L10.1004 16.8002" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>'
      });
    } else {
      flatpickr(calendar, {
        inline: true,
        mode: "range",
        minDate: "today",
        locale: 'ru',
        prevArrow: '<svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none"><path d="M14.8996 16.7998L10.0996 11.9998L14.8996 7.19981" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',
        nextArrow: '<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10.1004 7.20019L14.9004 12.0002L10.1004 16.8002" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>'
      });
    }
  }

  // modal
  var modal = document.querySelectorAll('.modal');
  var modalBtn = document.querySelectorAll('.modal-btn');
  var modalClose = document.querySelectorAll('.modal__close');
  if (modal && modalBtn && modalClose) {
    // modal
    modal.forEach(function (item) {
      item.addEventListener('click', function (event) {
        if (event.target.classList.contains('modal') || event.target.classList.contains('modal__wrap')) {
          event.preventDefault();
          document.querySelectorAll('.modal.is--active').forEach(function (child) {
            return child.classList.remove('is--active');
          });
          document.body.classList.remove('scroll-disabled');
        }
      });
    });

    // modal btn
    modalBtn.forEach(function (item, i) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var modalID = item.dataset.id;
        document.querySelectorAll('.modal.is--active').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        document.getElementById(modalID).classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      });
    });

    // modal close
    modalClose.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        document.querySelectorAll('.modal.is--active').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        document.body.classList.remove('scroll-disabled');
      });
    });
  }

  // fancybox
  Fancybox.bind('[data-fancybox="gallery"]', {
    animated: false,
    dragToClose: false,
    showClass: false,
    hideClass: false,
    closeButton: "top",
    Image: {
      zoom: false,
      wheel: false,
      click: false
    },
    Thumbs: false,
    Toolbar: {
      display: [{
        id: "counter",
        position: "left"
      }, {
        id: "prev",
        position: "left",
        html: '<svg><use xlink:href="img/sprite.svg#icon-arrow-prev"></use></svg>'
      }, {
        id: "next",
        position: "right",
        html: '<svg><use xlink:href="img/sprite.svg#icon-arrow-next"></use></svg>'
      }, {
        id: "close",
        position: "right",
        html: '<svg><use xlink:href="img/sprite.svg#icon-close-sm"></use></svg>'
      }]
    }
  });
});